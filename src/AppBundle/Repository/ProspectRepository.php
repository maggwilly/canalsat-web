<?php

namespace AppBundle\Repository;

use Doctrine\ORM\EntityRepository;

/**
 * ProspectRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class ProspectRepository extends EntityRepository
{

  /**
  *Nombre total de visite effectue par utilisateur 
  */
  public function prospectParCategorie($region=null, $startDate=null, $endDate=null){

       $qb = $this->createQueryBuilder('p');
        if($region!=null){
           $qb->where('p.ville=:ville')
          ->setParameter('ville', $region);
          }
          if($startDate!=null){
           $qb->andWhere('p.date is null orp.date>=:startDate')->setParameter('startDate', new \DateTime($startDate));
          }
          if($endDate!=null){
           $qb->andWhere('p.date is null or p.date<=:endDate')->setParameter('endDate',new \DateTime($endDate));
          }
            $qb->select('p.sociopro as categorie')
               ->addSelect('count(p.id) as nombre')
                ->addGroupBy('p.sociopro') ; 
          return $qb->getQuery()->getArrayResult();
     
  }	


  /**
  *Nombre total de visite effectue par utilisateur 
  */
  public function prospectParSegment($region=null, $startDate=null, $endDate=null){
       $qb = $this->createQueryBuilder('p');
        if($region!=null){
           $qb->where('p.ville=:ville')
          ->setParameter('ville', $region);
          }
          if($startDate!=null){
           $qb->andWhere('p.date is null orp.date>=:startDate')->setParameter('startDate', new \DateTime($startDate));
          }
          if($endDate!=null){
           $qb->andWhere('p.date is null or p.date<=:endDate')->setParameter('endDate',new \DateTime($endDate));
          }
            $qb->select('p.categorie as segment')
               ->addSelect('count(p.id) as nombre')
               ->addGroupBy('p.categorie') ; 
          return $qb->getQuery()->getArrayResult();
     
  }	

   /**
  *Nombre total de visite effectue par utilisateur 
  */
  public function preferencesCanal($region=null, $startDate=null, $endDate=null){
       $qb = $this->createQueryBuilder('p');
        if($region!=null){
           $qb->where('p.ville=:ville')
          ->setParameter('ville', $region);
          }
          if($startDate!=null){
           $qb->andWhere('p.date is null orp.date>=:startDate')->setParameter('startDate', new \DateTime($startDate));
          }
          if($endDate!=null){
           $qb->andWhere('p.date is null or p.date<=:endDate')->setParameter('endDate',new \DateTime($endDate));
          }
          $qb->andWhere('p.preference=:preference')
          ->setParameter('preference','Canal+');
           $qb->select('p.raison as raison')
               ->addSelect('count(p.id) as nombre')
               ->addGroupBy('p.raison'); 
        return $qb->getQuery()->getArrayResult();
  }	

   /**
  *Nombre total de visite effectue par utilisateur 
  */
  public function preferencesNoCanal($region=null, $startDate=null, $endDate=null){
       $qb = $this->createQueryBuilder('p');
        if($region!=null){
           $qb->where('p.ville=:ville')
          ->setParameter('ville', $region);
          }
          if($startDate!=null){
           $qb->andWhere('p.date is null orp.date>=:startDate')->setParameter('startDate', new \DateTime($startDate));
          }
          if($endDate!=null){
           $qb->andWhere('p.date is null or p.date<=:endDate')->setParameter('endDate',new \DateTime($endDate));
          }
          $qb->andWhere('p.preference<>:preference')
          ->setParameter('preference','Canal+');
           $qb->select('p.raison as raison')
               ->addSelect('count(p.id) as nombre')
               ->addGroupBy('p.raison'); 
        return $qb->getQuery()->getArrayResult();
  }	      
}
